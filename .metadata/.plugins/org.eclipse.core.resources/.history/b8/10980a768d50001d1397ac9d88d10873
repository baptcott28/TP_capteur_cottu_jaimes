/*
 * comm_Rpi.c
 *
 *  Created on: Oct 20, 2022
 *      Author: bapti
 */

#include "comm_Rpi.h"

uint8_t Rx_order_buffer[ORDER_SIZE];
uint8_t set_k[11]="SET_K=1234";
char *temp;
char *press;
char *angle;
char *coefK;

void clean_Rx_order_buffer(void){
	for(int i=0;i<ORDER_SIZE+1;i++){
		Rx_order_buffer[i]=0;
	}
}

void Rx_order_buffer_analyse(void){
	if((Rx_order_buffer[0]==71)&&(Rx_order_buffer[1]==69)&&(Rx_order_buffer[2]==84)&&(Rx_order_buffer[3]==95)){
		if((Rx_order_buffer[4]==84)){
			//temp=get_temperature()
			printf(temp);
			printf("recu GET_T\r\n");
		}
		else if((Rx_order_buffer[4]==80)){
			//press=get_pres()
			printf(press);
			printf("reçu GET_P\r\n");
		}
		else if((Rx_order_buffer[4]==65)){
			//angle=get_angle()
			printf(angle);
			printf("reçu GET_A\r\n");
		}
		else if((Rx_order_buffer[4]=75)){
			//coefK=get_coefK()
			printf(coefK);
			printf("reçu get_K\r\n");
		}
		else{
			printf("commande invalide\r\n");
		}
	}
	else if(Rx_order_buffer[0]==83){
		int rx_index=0;
		for(int i=0;i<11;i++){
			if(Rx_order_buffer[i]!=set_k[i]){
				printf("commande invalide\r\n");
			}
			else{
				rx_index++;
			}
		}
		if(rx_index==10){
			//set_k()
			printf("SET_K=SET_OK\r\n");
		}
		else{
			printf("commande invalide\r\n");
		}
	}
	clean_Rx_order_buffer();
}

void wait_for_order(void){
	HAL_UART_Receive(&huart1, Rx_order_buffer,ORDER_SIZE,5000);
	Rx_order_buffer_analyse();
}
